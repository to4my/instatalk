{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create(\"AppearanceChannel\", {\n  // Вызывается единожды при создании подписки.\n  initialized: function initialized() {\n    this.update = this.update.bind(this);\n  },\n  // Вызывается, когда подписка готова на сервере для использования.\n  connected: function connected() {\n    this.install();\n    this.update();\n  },\n  // Вызывается, когда закрывается соединения WebSocket.\n  disconnected: function disconnected() {\n    this.uninstall();\n  },\n  // Вызывается, когда подписка отвергается сервером.\n  rejected: function rejected() {\n    this.uninstall();\n  },\n  update: function update() {\n    this.documentIsActive ? this.appear() : this.away();\n  },\n  appear: function appear() {\n    // Вызывает `AppearanceChannel#appear(data)` на сервере.\n    this.perform(\"appear\", {\n      appearing_on: this.appearingOn\n    });\n  },\n  away: function away() {\n    // Вызывает `AppearanceChannel#away` на сервере.\n    this.perform(\"away\");\n  },\n  install: function install() {\n    window.addEventListener(\"focus\", this.update);\n    window.addEventListener(\"blur\", this.update);\n    document.addEventListener(\"turbolinks:load\", this.update);\n    document.addEventListener(\"visibilitychange\", this.update);\n  },\n  uninstall: function uninstall() {\n    window.removeEventListener(\"focus\", this.update);\n    window.removeEventListener(\"blur\", this.update);\n    document.removeEventListener(\"turbolinks:load\", this.update);\n    document.removeEventListener(\"visibilitychange\", this.update);\n  },\n\n  get documentIsActive() {\n    return document.visibilityState == \"visible\" && document.hasFocus();\n  },\n\n  get appearingOn() {\n    var element = document.querySelector(\"[data-appearing-on]\");\n    return element ? element.getAttribute(\"data-appearing-on\") : null;\n  }\n\n});","map":{"version":3,"sources":["/Users/andrey/ror/instatalk/app/javascript/channels/appearance_channel.js"],"names":["consumer","subscriptions","create","initialized","update","bind","connected","install","disconnected","uninstall","rejected","documentIsActive","appear","away","perform","appearing_on","appearingOn","window","addEventListener","document","removeEventListener","visibilityState","hasFocus","element","querySelector","getAttribute"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,mBAA9B,EAAmD;AAC/C;AACAC,EAAAA,WAF+C,yBAEjC;AACV,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH,GAJ8C;AAM/C;AACAC,EAAAA,SAP+C,uBAOnC;AACR,SAAKC,OAAL;AACA,SAAKH,MAAL;AACH,GAV8C;AAY/C;AACAI,EAAAA,YAb+C,0BAahC;AACX,SAAKC,SAAL;AACH,GAf8C;AAiB/C;AACAC,EAAAA,QAlB+C,sBAkBpC;AACP,SAAKD,SAAL;AACH,GApB8C;AAsB/CL,EAAAA,MAtB+C,oBAsBtC;AACL,SAAKO,gBAAL,GAAwB,KAAKC,MAAL,EAAxB,GAAwC,KAAKC,IAAL,EAAxC;AACH,GAxB8C;AA0B/CD,EAAAA,MA1B+C,oBA0BtC;AACL;AACA,SAAKE,OAAL,CAAa,QAAb,EAAuB;AAAEC,MAAAA,YAAY,EAAE,KAAKC;AAArB,KAAvB;AACH,GA7B8C;AA+B/CH,EAAAA,IA/B+C,kBA+BxC;AACH;AACA,SAAKC,OAAL,CAAa,MAAb;AACH,GAlC8C;AAoC/CP,EAAAA,OApC+C,qBAoCrC;AACNU,IAAAA,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiC,KAAKd,MAAtC;AACAa,IAAAA,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgC,KAAKd,MAArC;AACAe,IAAAA,QAAQ,CAACD,gBAAT,CAA0B,iBAA1B,EAA6C,KAAKd,MAAlD;AACAe,IAAAA,QAAQ,CAACD,gBAAT,CAA0B,kBAA1B,EAA8C,KAAKd,MAAnD;AACH,GAzC8C;AA2C/CK,EAAAA,SA3C+C,uBA2CnC;AACRQ,IAAAA,MAAM,CAACG,mBAAP,CAA2B,OAA3B,EAAoC,KAAKhB,MAAzC;AACAa,IAAAA,MAAM,CAACG,mBAAP,CAA2B,MAA3B,EAAmC,KAAKhB,MAAxC;AACAe,IAAAA,QAAQ,CAACC,mBAAT,CAA6B,iBAA7B,EAAgD,KAAKhB,MAArD;AACAe,IAAAA,QAAQ,CAACC,mBAAT,CAA6B,kBAA7B,EAAiD,KAAKhB,MAAtD;AACH,GAhD8C;;AAkD/C,MAAIO,gBAAJ,GAAuB;AACnB,WAAOQ,QAAQ,CAACE,eAAT,IAA4B,SAA5B,IAAyCF,QAAQ,CAACG,QAAT,EAAhD;AACH,GApD8C;;AAsD/C,MAAIN,WAAJ,GAAkB;AACd,QAAMO,OAAO,GAAGJ,QAAQ,CAACK,aAAT,CAAuB,qBAAvB,CAAhB;AACA,WAAOD,OAAO,GAAGA,OAAO,CAACE,YAAR,CAAqB,mBAArB,CAAH,GAA+C,IAA7D;AACH;;AAzD8C,CAAnD","sourcesContent":["import consumer from \"./consumer\"\n\nconsumer.subscriptions.create(\"AppearanceChannel\", {\n    // Вызывается единожды при создании подписки.\n    initialized() {\n        this.update = this.update.bind(this)\n    },\n\n    // Вызывается, когда подписка готова на сервере для использования.\n    connected() {\n        this.install()\n        this.update()\n    },\n\n    // Вызывается, когда закрывается соединения WebSocket.\n    disconnected() {\n        this.uninstall()\n    },\n\n    // Вызывается, когда подписка отвергается сервером.\n    rejected() {\n        this.uninstall()\n    },\n\n    update() {\n        this.documentIsActive ? this.appear() : this.away()\n    },\n\n    appear() {\n        // Вызывает `AppearanceChannel#appear(data)` на сервере.\n        this.perform(\"appear\", { appearing_on: this.appearingOn })\n    },\n\n    away() {\n        // Вызывает `AppearanceChannel#away` на сервере.\n        this.perform(\"away\")\n    },\n\n    install() {\n        window.addEventListener(\"focus\", this.update)\n        window.addEventListener(\"blur\", this.update)\n        document.addEventListener(\"turbolinks:load\", this.update)\n        document.addEventListener(\"visibilitychange\", this.update)\n    },\n\n    uninstall() {\n        window.removeEventListener(\"focus\", this.update)\n        window.removeEventListener(\"blur\", this.update)\n        document.removeEventListener(\"turbolinks:load\", this.update)\n        document.removeEventListener(\"visibilitychange\", this.update)\n    },\n\n    get documentIsActive() {\n        return document.visibilityState == \"visible\" && document.hasFocus()\n    },\n\n    get appearingOn() {\n        const element = document.querySelector(\"[data-appearing-on]\")\n        return element ? element.getAttribute(\"data-appearing-on\") : null\n    }\n})\n"]},"metadata":{},"sourceType":"module"}